// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inConcert.iMS.DataAccess.Data;

namespace inConcert.iMS.DataAccess.Migrations
{
    [DbContext(typeof(InConcertDbContext))]
    partial class InConcertDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.AlternativeCommercials", b =>
                {
                    b.Property<int>("CommercialId")
                        .HasColumnType("int");

                    b.Property<int>("AlternativeCommercialId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasMaxLength(11);

                    b.HasKey("CommercialId", "AlternativeCommercialId");

                    b.HasIndex("AlternativeCommercialId")
                        .IsUnique();

                    b.ToTable("AlternativeCommercials");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.CallParts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CallId")
                        .HasColumnType("int");

                    b.Property<string>("CallPartEndedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Undefined");

                    b.Property<string>("CallPartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CallResult")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("InProgress");

                    b.Property<int>("CommercialId")
                        .HasColumnType("int");

                    b.Property<string>("CommercialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(null);

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrigChannel")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Peer")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<string>("RedirectChannel")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 6, 26, 4, 50, 14, 996, DateTimeKind.Unspecified).AddTicks(8299), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("CallId");

                    b.ToTable("CallParts");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.Calls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalledId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CallerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<string>("CustomerName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(null);

                    b.Property<DateTimeOffset>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 6, 26, 4, 50, 14, 992, DateTimeKind.Unspecified).AddTicks(150), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.CallsCustomers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CallId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CallsCustomers");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.Commercials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PBXPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("PasswordChangeRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Peer")
                        .HasColumnType("int")
                        .HasMaxLength(4);

                    b.Property<string>("SiebelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MobilePhoneNumber")
                        .IsUnique();

                    b.HasIndex("PBXPhoneNumber")
                        .IsUnique();

                    b.HasIndex("Peer")
                        .IsUnique();

                    b.HasIndex("SiebelId")
                        .IsUnique();

                    b.ToTable("Commercials");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.CustomersPhones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CallsCustomersId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CallsCustomersId");

                    b.ToTable("CustomersPhones");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.LogsGenerals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CallsId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(6564);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue(null);

                    b.Property<DateTimeOffset>("HourLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 6, 26, 4, 50, 15, 8, DateTimeKind.Unspecified).AddTicks(3560), new TimeSpan(0, 0, 0, 0, 0)));

                    b.Property<string>("TypeLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue(null);

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1173);

                    b.HasKey("Id");

                    b.ToTable("LogsGenerals");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.Sessions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommercialId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(null);

                    b.Property<string>("FirebaseToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("LastKeepAlive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(null);

                    b.Property<DateTimeOffset>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2020, 6, 26, 4, 50, 15, 2, DateTimeKind.Unspecified).AddTicks(7933), new TimeSpan(0, 0, 0, 0, 0)));

                    b.HasKey("Id");

                    b.HasIndex("CommercialId")
                        .IsUnique();

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.Supervisors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id", "Email");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.AlternativeCommercials", b =>
                {
                    b.HasOne("inConcert.iMS.Domain.Entities.Commercials", "AlternativeCommercialProp")
                        .WithOne("AlternativeCommercial")
                        .HasForeignKey("inConcert.iMS.Domain.Entities.AlternativeCommercials", "AlternativeCommercialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("inConcert.iMS.Domain.Entities.Commercials", "Commercial")
                        .WithMany("AlternativeCommercials")
                        .HasForeignKey("CommercialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.CallParts", b =>
                {
                    b.HasOne("inConcert.iMS.Domain.Entities.Calls", "Call")
                        .WithMany("CallParts")
                        .HasForeignKey("CallId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.CustomersPhones", b =>
                {
                    b.HasOne("inConcert.iMS.Domain.Entities.CallsCustomers", null)
                        .WithMany("CustomerPhone")
                        .HasForeignKey("CallsCustomersId");
                });

            modelBuilder.Entity("inConcert.iMS.Domain.Entities.Sessions", b =>
                {
                    b.HasOne("inConcert.iMS.Domain.Entities.Commercials", "Comercial")
                        .WithOne("Session")
                        .HasForeignKey("inConcert.iMS.Domain.Entities.Sessions", "CommercialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
